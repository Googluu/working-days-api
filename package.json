{
  "name": "working-days-api",
  "version": "0.0.1",
  "description": "API para cálculo de fechas hábiles en Colombia - AWS Lambda",
  "main": "dist/index.js",
  "author": "Sneyder Huertas <sneyder.h.rodriguez@gmail.com>",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "tsc",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",  
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json --verbose",
    "test:e2e:debug": "jest --config ./test/jest-e2e.json --verbose --detectOpenHandles",
    "package:lambda": "npm run build:lambda && cd dist && zip -r ../lambda-deployment.zip .",
    "cdk:install": "npm install -g aws-cdk && cdk --version",
    "cdk:bootstrap": "cdk bootstrap",
    "cdk:synth": "cdk synth",
    "cdk:deploy": "cdk deploy --require-approval never",  
    "cdk:destroy": "cdk destroy",
    "cdk:diff": "cdk diff",
    "deploy:complete": "npm run build:lambda && npm run cdk:deploy",
    "deploy:first-time": "npm run cdk:bootstrap && npm run deploy:complete",
    "logs:lambda": "aws logs describe-log-groups --log-group-name-prefix '/aws/lambda/working-days'",
    "logs:tail": "aws logs tail '/aws/lambda/working-days-api' --follow",
    "debug:build": "echo '🔍 Debugging build process...' && rm -rf dist && tsc -p tsconfig.lambda.json && echo '📂 Contents of dist:' && find dist -type f -name '*.js' | head -20",
    "debug:lambda": "echo '📦 Checking Lambda package structure...' && npm run debug:build && echo '🔍 Looking for handler...' && ls -la dist/cdk/lambda/ || echo '❌ Handler directory not found'",
    "build:lambda": "echo '🏗️ Building Lambda function...' && rm -rf dist && tsc -p tsconfig.lambda.json",
    "build:verify": "npm run build:lambda && echo '✅ Verifying build output:' && find dist -name '*.js' | grep -E '(handler|main)' || echo '❌ No handler found in build'",
    "deploy:debug": "npm run debug:lambda && echo '🚀 Deploying with debug info...' && cdk deploy --require-approval never",
    "lambda:test-local": "npm run build:lambda && node -e \"const {handler} = require('./dist/cdk/lambda/handler'); console.log('Handler loaded successfully:', typeof handler);\""
  },
  "dependencies": {
    "@nestjs/common": "^11.0.1",
    "@nestjs/core": "^11.0.1",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@types/aws-lambda": "^8.10.152",
    "@vendia/serverless-express": "^4.12.6",
    "aws-cdk-lib": "^2.217.0",
    "aws-lambda": "^1.0.7",
    "axios": "^1.12.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "constructs": "^10.4.2",
    "@aws-cdk/aws-lambda-nodejs": "^1.204.0",
    "esbuild": "^0.25.10",
    "moment-timezone": "^0.6.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/testing": "^11.1.6",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.3",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^30.1.3",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.4",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
